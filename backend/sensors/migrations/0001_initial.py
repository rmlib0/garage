# Generated by Django 4.2.4 on 2023-09-11 19:19

from django.db import migrations, models
import django.db.models.deletion
import django_countries.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Floor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('name', models.CharField(max_length=200, verbose_name='floor name')),
            ],
            options={
                'verbose_name': 'Floor',
                'verbose_name_plural': 'Floors',
                'ordering': ['garage', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Garage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='garage name')),
            ],
            options={
                'verbose_name': 'Garage',
                'verbose_name_plural': 'Garages',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='manufacturer name')),
                ('country', django_countries.fields.CountryField(max_length=2, verbose_name='country')),
                ('url', models.URLField(blank=True, null=True, verbose_name='manufacturer web-site')),
            ],
            options={
                'verbose_name': 'Manufacturer',
                'verbose_name_plural': 'Manufacturers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('name', models.CharField(max_length=200, verbose_name='Room')),
                ('floor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='sensors.floor')),
            ],
            options={
                'verbose_name': 'Room',
                'verbose_name_plural': 'Rooms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('status', models.BooleanField(default=True, verbose_name='active')),
                ('name', models.CharField(max_length=255, verbose_name='sensor name')),
                ('type', models.CharField(choices=[('DHT', 'Temperature and humidity'), ('PIR', 'Motin detection'), ('PR', 'Pressure sensor')], max_length=3, verbose_name='sensor type')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='sensors.manufacturer')),
                ('room', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sensors', related_query_name='sensors', to='sensors.room')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='tag')),
                ('color', models.CharField(max_length=7, unique=True, verbose_name='color')),
                ('slug', models.SlugField(max_length=200, unique=True, verbose_name='slug')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='DHT',
            fields=[
                ('sensor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sensors.sensor')),
                ('temperature', models.FloatField(blank=True, null=True, verbose_name='Temperature')),
                ('humidity', models.FloatField(blank=True, null=True, verbose_name='Humidity')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='action timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=('sensors.sensor',),
        ),
        migrations.CreateModel(
            name='PIR',
            fields=[
                ('sensor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sensors.sensor')),
                ('detection', models.BooleanField(verbose_name='motion detection')),
                ('action_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='action timestamp')),
            ],
            options={
                'abstract': False,
            },
            bases=('sensors.sensor',),
        ),
        migrations.CreateModel(
            name='PR',
            fields=[
                ('sensor_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sensors.sensor')),
                ('pressure', models.FloatField(verbose_name='Pressure')),
            ],
            options={
                'abstract': False,
            },
            bases=('sensors.sensor',),
        ),
        migrations.AddField(
            model_name='room',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='rooms', to='sensors.tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='floor',
            name='garage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='floors', to='sensors.garage'),
        ),
        migrations.AddConstraint(
            model_name='floor',
            constraint=models.UniqueConstraint(fields=('name', 'garage'), name='unique_floor'),
        ),
    ]
